{
    "endpoints": {
        "thunder": {
            "protocol": "thunder",
            "url": "ws://127.0.0.1:9998/jsonrpc"
        }
    },
    "rules": {
        "ripple.device_os_version": {
            "alias": "static",
            "transform": {
                "response": "{\"modelNumber\": \"25Q1_SPRINT_20250122003212_U\"}"
            }
        },
        "device.type": {
            "alias": "static",
            "transform": {
                "response": "\"TV\""
            }
        },
        "localization.countryCode": {
            "alias": "org.rdk.System.getTerritory",
            "transform": {
                "response": "if .result and .result.success then if .result.territory == \"CAN\" then \"CA\" else \"US\" end else \"US\" end"
            }
        },
        "localization.setCountryCode": {
            "alias": "org.rdk.System.setTerritory",
            "transform": {
                "request": "if .value==\"IT\" then { territory: \"ITA\", \"region\":\"EU-IT\" } else  { territory: \"GBR\", \"region\":\"GB-EN\" } end",
                "response": "if .success then \"null\" else { code: -32100, message: \"couldnt set countrycode\" } end"
            }
        },
        "localization.onCountryCodeChanged": {
            "alias": "org.rdk.System.onTerritoryChanged",
            "transform": {
                "event": "if .newTerritory==\"ITA\" then \"IT\" else  \"UK\" end"
            }
        },
        "localization.language": {
            "alias": "org.rdk.PersistentStore.getValue",
            "transform": {
                "request": "{ namespace: \"Localization\", key: \"language\"}",
                "response": "if .result and .result.success then (.result.value | fromjson | .value) else \"en\" end"
            }
        },
        "localization.setLanguage": {
            "alias": "org.rdk.PersistentStore.setValue",
            "transform": {
                "request": "{ value: {update_time: now | todateiso8601, value: .value}, namespace: \"Localization\", key: \"language\"}",
                "response": "if .result and .result.success then null else { error: { code: -32100, message: \"couldn't set language\" }} end"
            }
        },
        "localization.onLanguageChanged": {
            "alias": "org.rdk.PersistentStore.onValueChanged",
            "transform": {
                "event": "(.value | fromjson | .value)"
            },
            "filter": "if .namespace == \"Localization\" and .key == \"language\" then true else false end"
        },
        "localization.additionalInfo": {
            "alias": "org.rdk.PersistentStore.getValue",
            "transform": {
                "request": "{ namespace: \"Localization\", key: \"additionalInfo\"}",
                "response": "if .result and .result.success then (.result.value | fromjson | .value) else \"en\" end"
            }
        },
        "localization.setAdditionalInfo": {
            "alias": "org.rdk.PersistentStore.setValue",
            "transform": {
                "request": "{ value: {update_time: now | todateiso8601, value: .value}, namespace: \"Localization\", key: \"additionalInfo\"}",
                "response": "if .result and .result.success then null else { error: { code: -32100, message: \"couldn't set additionalInfo\" }} end"
            }
        },
        "localization.onAdditionalInfoChanged": {
            "alias": "org.rdk.PersistentStore.onValueChanged",
            "transform": {
                "event": "(.value | fromjson | .value)"
            },
            "filter": "if .namespace == \"Localization\" and .key == \"additionalInfo\" then true else false end"
        },
        "localization.timeZone": {
            "alias": "org.rdk.System.getTimeZoneDST",
            "transform": {
                "response": "if .result and .result.success then .result.timeZone else { error: { code: -32100, message: \"couldn't get timezone\" }} end"
            }
        },
        "securestorage.get": {
            "alias": "org.rdk.PersistentStore.1.getValue",
            "transform": {
                "request": "{ namespace: \"$context.appId\", scope: .scope, key: .key }",
                "response": ".value"
            }
        },
        "securestorage.set": {
            "alias": "org.rdk.PersistentStore.1.setValue",
            "transform": {
                "request": "{ namespace: \"$context.appId\", scope: .scope, key: .key, value: .value }",
                "response": "if .success then \"null\" else { code: -32100, message: \"couldnt set timezone\" } end"
            }
        },
        "securestorage.remove": {
            "alias": "org.rdk.PersistentStore.1.deleteKey",
            "transform": {
                "request": "{ namespace: \"$context.appId\", scope: .scope, key: .key }",
                "response": "if .success then \"null\" else { code: -32100, message: \"couldnt set timezone\" } end"
            }
        },
        "securestorage.clear": {
            "alias": "org.rdk.PersistentStore.1.deleteNamespace",
            "transform": {
                "request": "{ namespace: \"$context.appId\", scope: .scope}",
                "response": "if .success then \"null\" else { code: -32100, message: \"couldnt set timezone\" } end"
            }
        },
        "secondscreen.device": {
            "alias": "org.rdk.AuthService.getXDeviceId",
            "transform": {
                "response": "if .result and .result.success then .result.xDeviceId else { error: { code: -32100, message: \"couldn't get device ID\" }} end"
            }
        },
        "keyboard.provideStandard": {
            "alias": "provided"
        },
        "keyboard.standard": {
            "alias": "provided"
        },
        "advertising.appBundleId": {
            "alias": "static",
            "transform": {
                "response": "\"refui.app\""
            }
        }
    }
}
